# Cline Rules - Project Intelligence

This file captures key patterns, preferences, and insights discovered during the project lifecycle. It helps Cline (the AI assistant) work more effectively and consistently within this specific project context.

## Core Principles & Preferences

*   [Document overarching principles or user preferences for development, e.g., "Prefer functional components in React," "Always include unit tests for new backend logic."]

## Important Implementation Patterns

*   **Task ID Property:** The task identifier property used in `apps/static/dataset.json` and referenced in the JavaScript files is `task_id`, not `id`. Ensure this property name is used consistently when accessing task identifiers.
*   [Describe recurring code structures or architectural patterns specific to this project, e.g., "State management follows the Redux pattern with specific middleware," "API error handling uses a centralized middleware."]

## Tooling & Workflow Notes

*   **Benchmark Testing:** Always use the `GEMINI_FLASH` model identifier when running benchmark tests, unless explicitly requested otherwise. (e.g., `python benchmark/run_benchmark.py --model_identifier GEMINI_FLASH ...`)
*   **JSON File Handling:** Never open JSON files directly. Instead, read the Python files that produce them to understand their structure and content. This ensures proper context and understanding of the data generation process.
*   [Record project-specific tool usage or workflow steps, e.g., "Use `npm run lint:fix` before committing," "Deployment requires manual approval step X."]

## Deployment Notes

*   **`/arc2/` URL Prefix:** The application is intended to be served under the `/arc2/` URL prefix in deployment, likely using a reverse proxy (like Nginx or Apache).
*   **WebSocket Proxying:** When served under the `/arc2/` prefix, the reverse proxy must be configured to specifically handle and proxy WebSocket connections for `/arc2/socket.io/` to the backend Flask-SocketIO server's default `/socket.io/` endpoint. The client-side JavaScript is configured to connect to the default `/socket.io/` path, relying on the reverse proxy for correct routing.

## Known Challenges & Workarounds

*   [Note any persistent technical challenges or established workarounds, e.g., "Legacy module X has performance issues under load; use caching strategy Y," "Browser compatibility issue with Z requires specific CSS hack."]

## Decision Log

*   [Optionally, track significant decisions and their rationale if not covered elsewhere.]

---

*This file is maintained by Cline and the user. Add new rules and insights as they are discovered.*
